waiting for mopidy to be online...
mopidy_stderr: INFO     HTTP server running at [::]:6680
INFO     Starting Spotmop 2.10.1
INFO     Starting GLib mainloop
INFO     Pusher server running at [0.0.0.0]:6681

...mopidy is online
Server started at: http://0.0.0.0:8081
[35mplaying[39m[33m=>[39m[36m/Users/benwiz/github/personal/sasha/appendages/listener/resources/ding.wav[39m

!
reduce: null 
{ query: 'set the volume to 20',
  topScoringIntent: { intent: 'music.volume', score: 0.9999995 },
  intents: 
   [ { intent: 'music.volume', score: 0.9999995 },
     { intent: 'None', score: 0.0144992163 },
     { intent: 'music.previous', score: 0.0118833818 },
     { intent: 'music.pause', score: 0.009045393 },
     { intent: 'music.play', score: 0.0017936544 },
     { intent: 'music.next', score: 0.000385072228 },
     { intent: 'converse.fact', score: 0.00000103483251 },
     { intent: 'converse.joke', score: 9.581992e-8 } ],
  entities: 
   [ { entity: '20',
       type: 'volume',
       startIndex: 18,
       endIndex: 19,
       score: 0.9865574 } ] }
intent: music.volume
{ intent: 'music.volume', volume: '20' }
options: { intent: 'music.volume', volume: '20' }
set vol: 20
true
true
text res: true
[32mcompleted[39m[33m=>[39m[35m/Users/benwiz/github/personal/sasha/appendages/listener/resources/ding.wav[39m
kill ChildProcess {
  domain: null,
  _events: 
   { close: [Function: exithandler],
     error: [Function: errorhandler],
     exit: [Function] },
  _eventsCount: 3,
  _maxListeners: undefined,
  _closesNeeded: 3,
  _closesGot: 0,
  connected: false,
  signalCode: null,
  exitCode: null,
  killed: false,
  spawnfile: '/bin/sh',
  _handle: Process { owner: [Circular], onexit: [Function], pid: 43585 },
  spawnargs: 
   [ '/bin/sh',
     '-c',
     '/Users/benwiz/github/personal/sasha/appendages/mopidy/mopidy' ],
  pid: 43585,
  stdin: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Pipe {
        bytesRead: 0,
        _externalStream: {},
        fd: 19,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd] },
     _eventsCount: 3,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null },
  stdout: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Pipe {
        bytesRead: 0,
        _externalStream: {},
        fd: 21,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8' },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        close: [Function],
        data: [Object] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: false,
     allowHalfOpen: false,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     read: [Function],
     _consuming: true },
  stderr: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Pipe {
        bytesRead: 1236,
        _externalStream: {},
        fd: 23,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8' },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        close: [Function],
        data: [Object] },
     _eventsCount: 5,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: false,
     allowHalfOpen: false,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     read: [Function],
     _consuming: true },
  stdio: 
   [ Socket {
       connecting: false,
       _hadError: false,
       _handle: [Object],
       _parent: null,
       _host: null,
       _readableState: [Object],
       readable: false,
       domain: null,
       _events: [Object],
       _eventsCount: 3,
       _maxListeners: undefined,
       _writableState: [Object],
       writable: true,
       allowHalfOpen: false,
       destroyed: false,
       _bytesDispatched: 0,
       _sockname: null,
       _writev: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: null,
       _server: null },
     Socket {
       connecting: false,
       _hadError: false,
       _handle: [Object],
       _parent: null,
       _host: null,
       _readableState: [Object],
       readable: true,
       domain: null,
       _events: [Object],
       _eventsCount: 5,
       _maxListeners: undefined,
       _writableState: [Object],
       writable: false,
       allowHalfOpen: false,
       destroyed: false,
       _bytesDispatched: 0,
       _sockname: null,
       _writev: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: null,
       _server: null,
       read: [Function],
       _consuming: true },
     Socket {
       connecting: false,
       _hadError: false,
       _handle: [Object],
       _parent: null,
       _host: null,
       _readableState: [Object],
       readable: true,
       domain: null,
       _events: [Object],
       _eventsCount: 5,
       _maxListeners: undefined,
       _writableState: [Object],
       writable: false,
       allowHalfOpen: false,
       destroyed: false,
       _bytesDispatched: 0,
       _sockname: null,
       _writev: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: null,
       _server: null,
       read: [Function],
       _consuming: true } ] }
mopidy_stderr: INFO     GLib mainloop got SIGTERM. Exiting...
INFO     Stopping Mopidy frontends
INFO     Stopping Mopidy core
INFO     Stopping Mopidy backends
INFO     Stopping Mopidy audio
INFO     Stopping Mopidy mixer

